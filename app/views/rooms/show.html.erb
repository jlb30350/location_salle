<div class="room-details-section">
  <h2><%= @room.name %></h2>

  <!-- Menu déroulant pour choisir la durée -->
  <div class="form-group mt-4">
    <%= label_tag :duration, 'Choisissez la durée' %>
    <%= select_tag :duration, options_for_select([
      ['1 heure', 'hour'], 
      ['1 jour', 'day'], 
      ['2 à 6 jours', 'multiple_days'], 
      ['Week-End', 'weekend'], 
      ['Semaine', 'week'], 
      ['Mois', 'month'], 
      ['Trimestre', 'quarter'], 
      ['Semestre', 'semiannual'], 
      ['Année', 'year']]), 
      class: 'form-control', id: 'duration-select' %>
  </div>

  <!-- Affichage des réservations existantes -->
  <h3>Réservations existantes :</h3>
  <div class="reservations-list">
    <% if @bookings.present? %>
      <% @bookings.each do |booking| %>
        <div class="calendar-day reserved">
          <p>Réservé du <%= booking.start_date.strftime('%d/%m/%Y') %> au <%= booking.end_date.strftime('%d/%m/%Y') %></p>
        </div>
      <% end %>
    <% else %>
      <p>Aucune réservation pour le moment.</p>
    <% end %>
  </div>

  <!-- Navigation du calendrier -->
  <div class="calendar-navigation mb-3 mt-4">
    <%= link_to "Année précédente", room_path(@room, year: @year.to_i - 1, month: @month), class: "btn btn-secondary" %>
    <%= link_to "Mois précédent", room_path(@room, year: @month == 1 ? @year.to_i - 1 : @year, month: @month == 1 ? 12 : @month.to_i - 1), class: "btn btn-secondary" %>
    <%= link_to "Mois suivant", room_path(@room, year: @month == 12 ? @year.to_i + 1 : @year, month: @month == 12 ? 1 : @month.to_i + 1), class: "btn btn-secondary" %>
    <%= link_to "Année suivante", room_path(@room, year: @year.to_i + 1, month: @month), class: "btn btn-secondary" %>
  </div>

  <h3><%= Date::MONTHNAMES[@month.to_i] %> <%= @year %></h3>

  <!-- Affichage du calendrier sous forme de tableau -->
  <table class="table calendar-table">
    <thead>
      <tr>
        <% Date::ABBR_DAYNAMES.each do |day_name| %>
          <th><%= day_name %></th>
        <% end %>
      </tr>
    </thead>
    <tbody>
      <% begin %>
        <% first_day_of_month = Date.new(@year.to_i, @month.to_i, 1) %>
        <% last_day_of_month = first_day_of_month.end_of_month %>
        <% start_day_of_week = first_day_of_month.wday %>

        <tr>
          <!-- Remplissage des cellules vides avant le premier jour du mois -->
          <% start_day_of_week.times do %>
            <td></td>
          <% end %>

          <!-- Boucle sur les jours du mois pour générer les cellules -->
          <% (first_day_of_month..last_day_of_month).each do |date| %>
            <% past_day_class = 'past-day' if date < Date.today %>
            <% is_reserved = @bookings.any? { |booking| booking.start_date <= date && booking.end_date >= date } %>
            <td class="<%= 'reserved' if is_reserved %> <%= past_day_class %>">
              <% if is_reserved %>
                <span class="reserved-date"><%= date.day %></span>
              <% else %>
                <% if date >= Date.today %>
                  <button class="btn btn-success available-day" data-date="<%= date %>" data-day="<%= date.wday %>"><%= date.day %></button>
                <% else %>
                  <span><%= date.day %></span>
                <% end %>
              <% end %>
            </td>
            <% if date.wday == 6 %> <!-- Fin de semaine, nouvelle ligne -->
              </tr><tr>
            <% end %>
          <% end %>

          <!-- Remplissage des cellules vides après le dernier jour du mois -->
          <% (6 - last_day_of_month.wday).times do %>
            <td></td>
          <% end %>
        </tr>
      <% rescue ArgumentError => e %>
        <p>Date invalide. Veuillez essayer de nouveau.</p>
      <% end %>
    </tbody>
  </table>
</div>

<div class="mt-4">
  <p id="message-formulaire"></p>

  <p>Date de début sélectionnée : <span id="start-date-display">Aucune</span></p>
  <p>Date de fin sélectionnée : <span id="end-date-display">Aucune</span></p>
  <p>Heure de début sélectionnée : <span id="time-display">Aucune</span></p>
  <p>Heure de fin sélectionnée : <span id="end-time-display">Aucune</span></p>
</div>

<!-- Formulaire caché pour soumettre la réservation -->
<%= form_with url: room_bookings_path(@room), method: :post, local: true, id: "reservation-form" do |form| %>
  <%= form.hidden_field :start_date, id: "start-date-input" %>
  <%= form.hidden_field :end_date, id: "end-date-input" %>
  <%= form.hidden_field :start_time, id: "start-time-input" %>
  <%= form.hidden_field :end_time, id: "end-time-input" %>
<% end %>

<!-- Un seul bouton pour réserver -->
<div class="form-group mt-4">
  <button id="reservation-button" class="btn btn-primary">Réserver</button>
</div>

<div class="mt-3">
  <button id="reset-button" class="btn btn-warning">Réinitialiser la durée</button>
</div>

<script>

document.addEventListener("DOMContentLoaded", function() {
  const durationSelect = document.getElementById('duration-select');
  const availableDays = document.querySelectorAll('.available-day');
  const startDateDisplay = document.getElementById('start-date-display');
  const endDateDisplay = document.getElementById('end-date-display');
  const timeDisplay = document.getElementById('time-display'); // Pour l'heure de début
  const endTimeDisplay = document.getElementById('end-time-display'); // Pour l'heure de fin
  let selectedStartDate = null;
  let selectedEndDate = null;
  let selectedStartTime = "07:00";
  let selectedEndTime = "17:00";
  let manualSelection = false;

  function updateDisplays() {
    startDateDisplay.textContent = selectedStartDate || 'Aucune';
    endDateDisplay.textContent = selectedEndDate || 'Aucune';
    timeDisplay.textContent = selectedStartTime || 'Aucune';
    endTimeDisplay.textContent = selectedEndTime || 'Aucune';
  }

  availableDays.forEach(button => {
    button.addEventListener('click', function() {
      const selectedDate = this.getAttribute('data-date');
      const selectedDuration = durationSelect.value;

      if (selectedDuration === 'multiple_days') {
        if (!selectedStartDate) {
          selectedStartDate = selectedDate;
        } else {
          selectedEndDate = selectedDate;
          manualSelection = true;
        }
      } else {
        selectedStartDate = selectedDate;
        switch (selectedDuration) {
          case 'hour':
            selectedEndDate = selectedStartDate;
            selectedStartTime = prompt("Veuillez entrer l'heure de début (format HH:MM)", selectedStartTime);
            selectedEndTime = prompt("Veuillez entrer l'heure de fin (format HH:MM)", selectedEndTime);
            break;
          case 'day':
            selectedEndDate = selectedStartDate;
            break;
          case 'week':
            selectedEndDate = new Date(new Date(selectedStartDate).setDate(new Date(selectedStartDate).getDate() + 6)).toISOString().split('T')[0];
            break;
          case 'weekend':
            const startDay = new Date(selectedStartDate).getDay();
            if (startDay !== 6) {
              alert("Veuillez sélectionner un samedi pour un week-end.");
              selectedStartDate = null;
              selectedEndDate = null;
            } else {
              selectedEndDate = new Date(new Date(selectedStartDate).setDate(new Date(selectedStartDate).getDate() + 1)).toISOString().split('T')[0];
            }
            break;
          case 'month':
            selectedEndDate = new Date(new Date(selectedStartDate).setMonth(new Date(selectedStartDate).getMonth() + 1)).toISOString().split('T')[0];
            break;
        }
      }

      updateDisplays();
    });
  });

  document.getElementById('reservation-button').addEventListener('click', function() {
    document.getElementById('start-date-input').value = selectedStartDate;
    document.getElementById('end-date-input').value = selectedEndDate;
    document.getElementById('start-time-input').value = selectedStartTime;
    document.getElementById('end-time-input').value = selectedEndTime;
    document.getElementById('reservation-form').submit();
  });

  document.getElementById('reset-button').addEventListener('click', function() {
    selectedStartDate = null;
    selectedEndDate = null;
    selectedStartTime = "07:00";
    selectedEndTime = "17:00";
    updateDisplays();
  });
});

</script>
